{"version":3,"sources":["components/Form/Form.jsx","components/List/List.jsx","components/Note/Note.jsx","components/ListItem/ListItem.jsx","components/NotesWidget/NotesWidget.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["DEFAULT_FORM_VALUE","content","Form","props","onHandleSubmit","useState","form","setForm","className","onSubmit","event","preventDefault","htmlFor","name","onChange","target","value","prev","List","data","children","Note","item","onDeleteItem","Fragment","onClick","id","ListItem","NotesWidget","handleSubmit","trim","fetch","process","method","body","JSON","stringify","headers","then","getData","handleDeleteItem","response","json","result","setState","state","this","map","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAGMA,EAAqB,CACzBC,QAAS,IAGI,SAASC,EAAKC,GAAQ,IAC3BC,EAAmBD,EAAnBC,eAD0B,EAEVC,mBAASL,GAFC,mBAE3BM,EAF2B,KAErBC,EAFqB,KAelC,OACE,uBAAMC,UAAU,OAAOC,SAZR,SAACC,GAChBA,EAAMC,iBACNP,EAAeE,GACfC,EAAQP,IASR,UACE,uBAAOQ,UAAU,cAAcI,QAAQ,UAAvC,sBACA,0BAAUJ,UAAU,WAAWK,KAAK,UAAUC,SAR5B,SAACJ,GAAW,IAAD,EACPA,EAAMK,OAAtBF,EADuB,EACvBA,KAAMG,EADiB,EACjBA,MACdT,GAAQ,SAACU,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBJ,EAAOG,QAMmCA,MAAOV,EAAKL,UACnF,wBAAQO,UAAU,8BAAlB,qBCvBS,SAASU,EAAKf,GAAQ,IAC3BK,EAAoBL,EAApBK,UAAWW,EAAShB,EAATgB,KAEnB,OACE,oBAAIX,UAAWA,EAAf,SACGL,EAAMiB,SAASD,KCLP,SAASE,EAAKlB,GAAQ,IAC3BmB,EAAuBnB,EAAvBmB,KAAMC,EAAiBpB,EAAjBoB,aAEd,OACE,eAAC,IAAMC,SAAP,WACE,mBAAGhB,UAAU,gBAAb,SAA8Bc,EAAKrB,UACnC,mBAAGO,UAAU,8BAA8BiB,QAAS,kBAAMF,EAAaD,EAAKI,KAA5E,sBCLS,SAASC,EAASxB,GAAQ,IAC/BK,EAAkCL,EAAlCK,UAAWc,EAAuBnB,EAAvBmB,KAAMC,EAAiBpB,EAAjBoB,aAEzB,OACE,oBAAIf,UAAWA,EAAf,SACE,cAACa,EAAD,CAAMC,KAAMA,EAAMC,aAAc,kBAAMA,EAAaD,EAAKI,S,ICJzCE,E,kDACnB,WAAYzB,GAAQ,IAAD,8BACjB,cAAMA,IAMR0B,aAAe,SAACnB,GACTA,EAAMT,QAAQ6B,SACnBpB,EAAMgB,GAAK,EACXK,MAAMC,8CAAiC,CACrCC,OAAQ,OACRC,KAAMC,KAAKC,UAAU1B,GACrB2B,QAAS,CAAE,eAAgB,sBAE1BC,MAAK,kBAAM,EAAKC,eAfF,EAkBnBC,iBAAmB,SAAC9B,GAClBqB,MAAM,GAAD,OAAIC,8CAAJ,YAAuCtB,GAAS,CACnDuB,OAAQ,WAEPK,MAAK,kBAAM,EAAKC,cAtBF,EAyBnBA,QAAU,WACRR,MAAMC,+CACHM,MAAK,SAACG,GAAD,OAAcA,EAASC,UAC5BJ,MAAK,SAACK,GAAD,OAAY,EAAKC,SAAS,CAAEzB,KAAMwB,QA1B1C,EAAKE,MAAQ,CACX1B,KAAM,IAHS,E,qDA+BnB,WACE2B,KAAKP,Y,oBAGP,WAAU,IAAD,OACP,OACE,eAAC,IAAMf,SAAP,WACE,sBAAKhB,UAAU,SAAf,UACE,sBAAMA,UAAU,eAAhB,mBACA,mBAAGA,UAAU,8BAA8BiB,QAAS,kBAAM,EAAKc,WAA/D,qBAEF,cAACrB,EAAD,CAAMV,UAAU,cAAcW,KAAM2B,KAAKD,MAAM1B,KAA/C,SACG,kBAAM,EAAK0B,MAAM1B,KAAK4B,KAAI,SAACzB,GAAD,OACzB,cAACK,EAAD,CAAwBnB,UAAU,aAAac,KAAMA,EAAMC,aAAc,EAAKiB,kBAA/DlB,EAAKI,UAExB,cAACxB,EAAD,CAAME,eAAgB0C,KAAKjB,sB,GA/CMmB,aCS1BC,MAVf,WAEE,OACE,qBAAKzC,UAAU,qBAAf,SACE,cAAC,EAAD,OCIS0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0f1519bb.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DEFAULT_FORM_VALUE = {\r\n  content: '',\r\n};\r\n\r\nexport default function Form(props) {\r\n  const { onHandleSubmit } = props;\r\n  const [form, setForm] = useState(DEFAULT_FORM_VALUE);\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    onHandleSubmit(form);\r\n    setForm(DEFAULT_FORM_VALUE);\r\n  }\r\n\r\n  const onInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setForm((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={onSubmit}>\r\n      <label className=\"form__label\" htmlFor=\"content\">New Note</label>\r\n      <textarea className=\"form__ta\" name='content' onChange={onInputChange} value={form.content} />\r\n      <button className=\"material-icons form__button\">send</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  onHandleSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function List(props) {\r\n  const { className, data } = props;\r\n\r\n  return (\r\n    <ul className={className}>\r\n      {props.children(data)}\r\n    </ul>\r\n  );\r\n}\r\n\r\nList.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  className: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Note(props) {\r\n  const { item, onDeleteItem } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <p className=\"note__content\">{item.content}</p>\r\n      <i className=\"note__delete material-icons\" onClick={() => onDeleteItem(item.id)}>close</i>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nNote.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  onDeleteItem: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Note from '../Note/Note';\r\n\r\nexport default function ListItem(props) {\r\n  const { className, item, onDeleteItem } = props;\r\n\r\n  return (\r\n    <li className={className}>\r\n      <Note item={item} onDeleteItem={() => onDeleteItem(item.id)} />\r\n    </li>\r\n  );\r\n}\r\n\r\nListItem.propTypes = {\r\n  className: PropTypes.string,\r\n  item: PropTypes.object.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport Form from '../Form/Form';\r\nimport List from '../List/List';\r\nimport ListItem from '../ListItem/ListItem';\r\n\r\nexport default class NotesWidget extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    if (!event.content.trim()) return;\r\n    event.id = 0; // добавляем свойство в тело запроса (хотя оно бессмысленно)\r\n    fetch(process.env.REACT_APP_NOTES_URL, {\r\n      method: 'POST',\r\n      body: JSON.stringify(event),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    })\r\n      .then(() => this.getData());\r\n  }\r\n\r\n  handleDeleteItem = (event) => {\r\n    fetch(`${process.env.REACT_APP_NOTES_URL}/${event}`, {\r\n      method: 'DELETE',\r\n    })\r\n      .then(() => this.getData());\r\n  }\r\n\r\n  getData = () => {\r\n    fetch(process.env.REACT_APP_NOTES_URL)\r\n      .then((response) => response.json())\r\n      .then((result) => this.setState({ data: result }));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"header\">\r\n          <span className=\"header__text\">Notes</span>\r\n          <i className=\"material-icons update__icon\" onClick={() => this.getData()}>loop</i>\r\n        </div>\r\n        <List className='list__items' data={this.state.data}>\r\n          {() => this.state.data.map((item) =>\r\n            <ListItem key={item.id} className='list__item' item={item} onDeleteItem={this.handleDeleteItem} />)}\r\n        </List>\r\n        <Form onHandleSubmit={this.handleSubmit} />\r\n      </React.Fragment >\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport NotesWidget from './components/NotesWidget/NotesWidget';\n\nfunction App() {\n\n  return (\n    <div className='component__wrapper'>\n      <NotesWidget />\n    </div>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}